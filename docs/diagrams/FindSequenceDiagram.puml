@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":FindCommandParser" as FindCommandParser LOGIC_COLOR
participant "f:FindCommand" as FindCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "p:NameContainsKeywordsPredicate" as Predicate MODEL_COLOR
end box

[-> LogicManager : execute("find alice")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("find alice")
activate AddressBookParser

AddressBookParser -> FindCommandParser : parse("alice")
activate FindCommandParser

create Predicate
FindCommandParser -> Predicate : new NameContainsKeywordsPredicate(["alice"])
activate Predicate
Predicate --> FindCommandParser
deactivate Predicate

create FindCommand
FindCommandParser -> FindCommand : new FindCommand(p)
activate FindCommand
FindCommand --> FindCommandParser
deactivate FindCommand

FindCommandParser --> AddressBookParser : f
deactivate FindCommandParser

AddressBookParser --> LogicManager : f
deactivate AddressBookParser

LogicManager -> FindCommand : execute(Model)
activate FindCommand

FindCommand -> Model : updateFilteredPersonList(p)
activate Model

Model -> Predicate : test(person) \n[for each person]
activate Predicate
Predicate --> Model : boolean
deactivate Predicate

Model --> FindCommand
deactivate Model

create CommandResult
FindCommand -> CommandResult : new CommandResult(message)
activate CommandResult
CommandResult --> FindCommand
deactivate CommandResult

FindCommand --> LogicManager : result
deactivate FindCommand

[<-- LogicManager : result
deactivate LogicManager

@enduml
